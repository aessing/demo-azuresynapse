{
	"name": "ESE_SQL_25_GoalLocations",
	"properties": {
		"description": "Once we observe that Spanish league has had most goals over the term of this data, we could find the top 3 goals locations per shot place from the games in Spain, by writing a more involved query using Window functions in Spark SQL. It would be a stepwise nested query.",
		"folder": {
			"name": "Europe Soccer Events"
		},
		"content": {
			"query": "-- =============================================================================\n-- European Soccer Events\n-- Azure Synapse Analytics Demo\n-- https://github.com/aessing/demo-azuresynapse\n-- -----------------------------------------------------------------------------\n-- Developer.......: Andre Essing (https://www.andre-essing.de/)\n--                                (https://github.com/aessing)\n--                                (https://twitter.com/aessing)\n--                                (https://www.linkedin.com/in/aessing/)\n-- -----------------------------------------------------------------------------\n-- THIS CODE AND INFORMATION ARE PROVIDED \"AS IS\" WITHOUT WARRANTY OF ANY KIND,\n-- EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED\n-- WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A PARTICULAR PURPOSE.\n-- =============================================================================\n\nUSE [SOCCERSERVERLESS];\nGO\n\n-- Top 3 goal locations per shot placement in the Spanish League\n\n-- Once we observe that Spanish league has had most goals over the term of this data,\n-- we could find the top 3 goals locations per shot place from the games in Spain, by\n-- writing a more involved query using Window functions in Spark SQL. It would be a\n-- stepwise nested query.\n\n-- Column chart\n--    Keys: SHOT_PLACE_STR\n--    Values: TOT_GOALS\n--    Series groupings: LOCATION_STR\n--    Aggregation: String: Sum\n--    Stacked\n\n SELECT SHOT_PLACE_STR, LOCATION_STR, TOT_GOALS\n  FROM (\n     SELECT SHOT_PLACE_STR, LOCATION_STR, TOT_GOALS,\n            RANK() OVER (PARTITION BY SHOT_PLACE_STR ORDER BY TOT_GOALS DESC) goals_rank\n       FROM (\n              SELECT CASE WHEN LOCATION_STR = 'NA' THEN 'Unknown' ELSE LOCATION_STR END LOCATION_STR, \n                    CASE WHEN SHOT_PLACE_STR = 'NA' THEN 'Unknown' ELSE SHOT_PLACE_STR END SHOT_PLACE_STR, \n                    COUNT(1) AS TOT_GOALS\n              FROM \n                [ext].[GameEvents]\n              WHERE is_goal = 1 AND COUNTRY_CODE = 'ESP' \n             GROUP BY SHOT_PLACE_STR, LOCATION_STR\n       ) tmp_in\n       WHERE TOT_GOALS IS NOT NULL AND TOT_GOALS <> 0\n     ) tmp_out\nWHERE goals_rank <= 3 AND LOCATION_STR != 'Unknown' AND SHOT_PLACE_STR != 'Unknown'\nORDER BY SHOT_PLACE_STR",
			"metadata": {
				"language": "sql"
			},
			"currentConnection": {
				"databaseName": "master",
				"poolName": "Built-in"
			},
			"resultLimit": 5000
		},
		"type": "SqlQuery"
	}
}