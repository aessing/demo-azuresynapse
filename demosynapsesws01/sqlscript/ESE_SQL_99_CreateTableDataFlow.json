{
	"name": "ESE_SQL_99_CreateTableDataFlow",
	"properties": {
		"folder": {
			"name": "Europe Soccer Events"
		},
		"content": {
			"query": "-- =============================================================================\n-- European Soccer Events\n-- Azure Synapse Analytics Demo\n-- https://github.com/aessing/demo-azuresynapse\n-- -----------------------------------------------------------------------------\n-- Developer.......: Andre Essing (https://www.andre-essing.de/)\n--                                (https://github.com/aessing)\n--                                (https://twitter.com/aessing)\n--                                (https://www.linkedin.com/in/aessing/)\n-- -----------------------------------------------------------------------------\n-- THIS CODE AND INFORMATION ARE PROVIDED \"AS IS\" WITHOUT WARRANTY OF ANY KIND,\n-- EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED\n-- WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A PARTICULAR PURPOSE.\n-- =============================================================================\n\n/*\nDROP TABLE DataFlow.factGameEvents \n*/\nIF NOT EXISTS (SELECT * FROM sys.objects WHERE NAME = 'factGameEvents' AND TYPE = 'U')\nCREATE TABLE DataFlow.factGameEvents\n\t(\n\t id_odsp nvarchar(256),\n\t id_event nvarchar(256),\n\t sort_order int,\n\t time int,\n\t text nvarchar(256),\n\t event_type int,\n\t event_type2 int,\n\t side int,\n\t event_team nvarchar(256),\n\t opponent nvarchar(256),\n\t player nvarchar(256),\n\t player2 nvarchar(256),\n\t player_in nvarchar(256),\n\t player_out nvarchar(256),\n\t shot_place int,\n\t shot_outcome int,\n\t is_goal int,\n\t location int,\n\t bodypart int,\n\t assist_method int,\n\t situation int,\n\t country nvarchar(256)\n\t)\nWITH\n\t(\n\tDISTRIBUTION = ROUND_ROBIN,\n\tHEAP\n\t)\nGO\nCREATE INDEX IX_factGameEvents_is_goal_country ON DataFlow.factGameEvents(is_goal, country);\nGO\n\n-- =============================================================================\n-- Dimensions\n-- =============================================================================\n/*\nDROP TABLE DataFlow.dimBodyPart \nDROP TABLE DataFlow.dimBodyPart \nDROP TABLE DataFlow.dimCountry \nDROP TABLE DataFlow.dimEventType \nDROP TABLE DataFlow.dimEventType2\nDROP TABLE DataFlow.dimLocation\nDROP TABLE DataFlow.dimShotOutcome\nDROP TABLE DataFlow.dimShotPlace \nDROP TABLE DataFlow.dimSide\nDROP TABLE DataFlow.dimSituation\n*/\nIF NOT EXISTS (SELECT * FROM sys.objects WHERE NAME = 'dimAssistMethod' AND TYPE = 'U')\nCREATE TABLE DataFlow.dimAssistMethod (id int, AssistMethod nvarchar(128))\nWITH (DISTRIBUTION = REPLICATE, CLUSTERED INDEX(id))\nGO\n\nIF NOT EXISTS (SELECT * FROM sys.objects WHERE NAME = 'dimBodyPart' AND TYPE = 'U')\nCREATE TABLE DataFlow.dimBodyPart (id int, BodyPart nvarchar(128))\nWITH (DISTRIBUTION = REPLICATE, CLUSTERED INDEX(id))\nGO\n\nIF NOT EXISTS (SELECT * FROM sys.objects WHERE NAME = 'dimCountry' AND TYPE = 'U')\nCREATE TABLE DataFlow.dimCountry (Country nvarchar(128), CountryCode nvarchar(128))\nWITH (DISTRIBUTION = REPLICATE, CLUSTERED INDEX(Country))\nGO\nCREATE INDEX IX_dimCountry_CountryCode ON DataFlow.dimCountry(CountryCode);\nGO\n\nIF NOT EXISTS (SELECT * FROM sys.objects WHERE NAME = 'dimEventType' AND TYPE = 'U')\nCREATE TABLE DataFlow.dimEventType (id int, EventType nvarchar(128))\nWITH (DISTRIBUTION = REPLICATE, CLUSTERED INDEX(id))\nGO\n\nIF NOT EXISTS (SELECT * FROM sys.objects WHERE NAME = 'dimEventType2' AND TYPE = 'U')\nCREATE TABLE DataFlow.dimEventType2 (id int, EventType2 nvarchar(128))\nWITH (DISTRIBUTION = REPLICATE, CLUSTERED INDEX(id))\nGO\n\nIF NOT EXISTS (SELECT * FROM sys.objects WHERE NAME = 'dimLocation' AND TYPE = 'U')\nCREATE TABLE DataFlow.dimLocation (id int, Location nvarchar(128))\nWITH (DISTRIBUTION = REPLICATE, CLUSTERED INDEX(id))\nGO\n\nIF NOT EXISTS (SELECT * FROM sys.objects WHERE NAME = 'dimShotOutcome' AND TYPE = 'U')\nCREATE TABLE DataFlow.dimShotOutcome (id int, ShotOutcome nvarchar(128))\nWITH (DISTRIBUTION = REPLICATE, CLUSTERED INDEX(id))\nGO\n\nIF NOT EXISTS (SELECT * FROM sys.objects WHERE NAME = 'dimShotPlace' AND TYPE = 'U')\nCREATE TABLE DataFlow.dimShotPlace (id int, ShotPlace nvarchar(128))\nWITH (DISTRIBUTION = REPLICATE, CLUSTERED INDEX(id))\nGO\n\nIF NOT EXISTS (SELECT * FROM sys.objects WHERE NAME = 'dimSide' AND TYPE = 'U')\nCREATE TABLE DataFlow.dimSide (id int, Side nvarchar(128))\nWITH (DISTRIBUTION = REPLICATE, CLUSTERED INDEX(id))\nGO\n\nIF NOT EXISTS (SELECT * FROM sys.objects WHERE NAME = 'dimSituation' AND TYPE = 'U')\nCREATE TABLE DataFlow.dimSituation (id int, Situation nvarchar(128))\nWITH (DISTRIBUTION = REPLICATE, CLUSTERED INDEX(id))\nGO\n\n-- =============================================================================\n-- ETL Config\n-- =============================================================================\n/*\nDROP TABLE config.etlConfiguration_DataFlow\n*/\nIF NOT EXISTS (SELECT * FROM sys.objects WHERE NAME = 'etlConfiguration_DataFlow' AND TYPE = 'U')\nCREATE TABLE config.etlConfiguration_DataFlow (\n\tSourceSystem nvarchar(128) NULL,\n\tSourceFolder nvarchar(128) NULL,\n    SourceFileName nvarchar(128) NULL,\n    SourceFileExtension nvarchar(16) NULL,\n\tDestinationSchema NVARCHAR(128) NULL,\n\tDestinationTable NVARCHAR(128) NULL,\n    IsActive BIT NULL\n)\nWITH (\n\tDISTRIBUTION = ROUND_ROBIN,\n\tHEAP\n)\nGO\nCREATE INDEX IX_etlConfiguration_DataFlow_IsActive ON Config.etlConfiguration_DataFlow(IsActive);\nGO\n\nINSERT INTO config.etlConfiguration_DataFlow (SourceSystem, SourceFolder, SourceFileName, SourceFileExtension, DestinationSchema, DestinationTable, IsActive) VALUES ('europesoccer', 'raw/dimensions.csv', 'dimAssistMethod', 'csv', 'DataFlow', 'dimAssistMethod',  1)\nINSERT INTO config.etlConfiguration_DataFlow (SourceSystem, SourceFolder, SourceFileName, SourceFileExtension, DestinationSchema, DestinationTable, IsActive) VALUES ('europesoccer', 'raw/dimensions.csv', 'dimBodypart', 'csv', 'DataFlow', 'dimBodypart',  1)\nINSERT INTO config.etlConfiguration_DataFlow (SourceSystem, SourceFolder, SourceFileName, SourceFileExtension, DestinationSchema, DestinationTable, IsActive) VALUES ('europesoccer', 'raw/dimensions.csv', 'dimCountry', 'csv', 'DataFlow', 'dimCountry',  1)\nINSERT INTO config.etlConfiguration_DataFlow (SourceSystem, SourceFolder, SourceFileName, SourceFileExtension, DestinationSchema, DestinationTable, IsActive) VALUES ('europesoccer', 'raw/dimensions.csv', 'dimEventType', 'csv', 'DataFlow', 'dimEventType',  1)\nINSERT INTO config.etlConfiguration_DataFlow (SourceSystem, SourceFolder, SourceFileName, SourceFileExtension, DestinationSchema, DestinationTable, IsActive) VALUES ('europesoccer', 'raw/dimensions.csv', 'dimEventType2', 'csv', 'DataFlow', 'dimEventType2',  1)\nINSERT INTO config.etlConfiguration_DataFlow (SourceSystem, SourceFolder, SourceFileName, SourceFileExtension, DestinationSchema, DestinationTable, IsActive) VALUES ('europesoccer', 'raw/dimensions.csv', 'dimLocation', 'csv', 'DataFlow', 'dimLocation',  1)\nINSERT INTO config.etlConfiguration_DataFlow (SourceSystem, SourceFolder, SourceFileName, SourceFileExtension, DestinationSchema, DestinationTable, IsActive) VALUES ('europesoccer', 'raw/dimensions.csv', 'dimShotOutcome', 'csv', 'DataFlow', 'dimShotOutcome',  1)\nINSERT INTO config.etlConfiguration_DataFlow (SourceSystem, SourceFolder, SourceFileName, SourceFileExtension, DestinationSchema, DestinationTable, IsActive) VALUES ('europesoccer', 'raw/dimensions.csv', 'dimShotPlace', 'csv', 'DataFlow', 'dimShotPlace',  1)\nINSERT INTO config.etlConfiguration_DataFlow (SourceSystem, SourceFolder, SourceFileName, SourceFileExtension, DestinationSchema, DestinationTable, IsActive) VALUES ('europesoccer', 'raw/dimensions.csv', 'dimSide', 'csv', 'DataFlow', 'dimSide',  1)\nINSERT INTO config.etlConfiguration_DataFlow (SourceSystem, SourceFolder, SourceFileName, SourceFileExtension, DestinationSchema, DestinationTable, IsActive) VALUES ('europesoccer', 'raw/dimensions.csv', 'dimSituation', 'csv', 'DataFlow', 'dimSituation',  1)\nGO",
			"metadata": {
				"language": "sql"
			},
			"currentConnection": {
				"name": "SoccerEvents",
				"type": "SqlPool"
			}
		},
		"type": "SqlQuery"
	}
}